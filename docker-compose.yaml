name: rlx

services:
  nginx:
    container_name: rlx-nginx
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    networks:
      net:
        ipv4_address: 172.18.1.2
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    # ----------------------------------------------------

  postgres:
    container_name: rlx-postgres
    image: postgres:16.4-bookworm
    networks:
      net:
        ipv4_address: 172.18.1.3
    ports:
      - "5432:5432/tcp"
    volumes:
      - pg_vol:/var/lib/postgresql/data:rw
      - ./postgresql/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf:ro # Comment it at the first launch
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      # ----------------------------------------------------

      # keycloak:
      #   container_name: rlx-keycloak
      #   build:
      #     context: ./keycloak
      #     dockerfile: ./Dockerfile
      #   networks:
      #     net:
      #       ipv4_address: 172.18.1.4
      #   healthcheck:
      #     test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e 'GET /health/ready HTTP/1.1\r host: http://localhost\r Connection: close\r \r ' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed';exit 1;fi;" ]
      #     interval: 1m
      #     timeout: 10s
      #     retries: 5
      #     start_period: 15s
      #   environment:
      #     - KC_DB_USERNAME=${KC_DB_USERNAME}
      #     - KC_DB_PASSWORD=${KC_DB_PASSWORD}
      #     - KC_DB_URL=${KC_DB_URL}
      #     - KC_PROXY_HEADERS=xforwarded
      #     - KC_HOSTNAME_STRICT=false
      #     - KC_HTTP_ENABLED=true
      #   command: [ "start", "--optimized" ]

networks:
  net:
    ipam:
      config:
        - subnet: 172.18.1.0/24

volumes:
  pg_vol:
