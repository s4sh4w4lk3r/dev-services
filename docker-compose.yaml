name: dev

services:
  nginx:
    container_name: dev-nginx
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    networks:
      dev_net:
        ipv4_address: 172.18.1.2
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/ssl/vocab.rlx:ro
    healthcheck:
      test: [ "CMD-SHELL", "wget -O /dev/null http://127.0.0.1/health || exit 1" ]
      timeout: 10s
      start_period: 5s
    # ----------------------------------------------------

  postgres:
    container_name: dev-postgres
    image: postgres:16.4-bookworm
    networks:
      dev_net:
        ipv4_address: 172.18.1.3
    ports:
      - "5432:5432/tcp"
    volumes:
      - pg_vol:/var/lib/postgresql/data:rw
      - ./postgresql/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf:rw # Comment it at the first launch
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres -U postgres" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 15s
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      # ----------------------------------------------------

  keycloak:
    container_name: dev-keycloak
    build:
      context: ./keycloak
      dockerfile: ./Dockerfile
    networks:
      dev_net:
        ipv4_address: 172.18.1.4
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e 'GET /health/ready HTTP/1.1\r host: http://localhost\r Connection: close\r \r ' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed';exit 1;fi;" ]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 15s
    environment:
      - KC_DB_USERNAME=${KC_DB_USERNAME}
      - KC_DB_PASSWORD=${KC_DB_PASSWORD}
      - KC_DB_URL=${KC_DB_URL}
      - KC_PROXY_HEADERS=xforwarded
      - KC_HOSTNAME_STRICT=false
      - KC_HTTP_ENABLED=true
    command: [ "start", "--optimized" ]
    depends_on:
      postgres:
        condition: service_healthy
      nginx:
        condition: service_healthy

networks:
  dev_net:
    name: dev_net
    ipam:
      config:
        - subnet: 172.18.1.0/24

volumes:
  pg_vol:
    name: dev_pg_vol
